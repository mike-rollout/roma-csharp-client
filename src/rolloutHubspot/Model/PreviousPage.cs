/*
 * Contacts
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = rolloutHubspot.Client.OpenAPIDateConverter;

namespace rolloutHubspot.Model
{
    /// <summary>
    /// PreviousPage
    /// </summary>
    [DataContract(Name = "PreviousPage")]
    public partial class PreviousPage : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PreviousPage" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PreviousPage() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PreviousPage" /> class.
        /// </summary>
        /// <param name="before">before (required).</param>
        /// <param name="link">link.</param>
        public PreviousPage(string before = default(string), string link = default(string))
        {
            // to ensure "before" is required (not null)
            if (before == null)
            {
                throw new ArgumentNullException("before is a required property for PreviousPage and cannot be null");
            }
            this.Before = before;
            this.Link = link;
        }

        /// <summary>
        /// Gets or Sets Before
        /// </summary>
        [DataMember(Name = "before", IsRequired = true, EmitDefaultValue = true)]
        public string Before { get; set; }

        /// <summary>
        /// Gets or Sets Link
        /// </summary>
        [DataMember(Name = "link", EmitDefaultValue = false)]
        public string Link { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PreviousPage {\n");
            sb.Append("  Before: ").Append(Before).Append("\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
