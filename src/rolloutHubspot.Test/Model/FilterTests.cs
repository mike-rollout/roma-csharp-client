/*
 * Contacts
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using rolloutHubspot.Model;
using rolloutHubspot.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace rolloutHubspot.Test.Model
{
    /// <summary>
    ///  Class for testing Filter
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FilterTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Filter
        //private Filter instance;

        public FilterTests()
        {
            // TODO uncomment below to create an instance of Filter
            //instance = new Filter();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Filter
        /// </summary>
        [Fact]
        public void FilterInstanceTest()
        {
            // TODO uncomment below to test "IsType" Filter
            //Assert.IsType<Filter>(instance);
        }

        /// <summary>
        /// Test the property 'HighValue'
        /// </summary>
        [Fact]
        public void HighValueTest()
        {
            // TODO unit test for the property 'HighValue'
        }

        /// <summary>
        /// Test the property 'PropertyName'
        /// </summary>
        [Fact]
        public void PropertyNameTest()
        {
            // TODO unit test for the property 'PropertyName'
        }

        /// <summary>
        /// Test the property 'Values'
        /// </summary>
        [Fact]
        public void ValuesTest()
        {
            // TODO unit test for the property 'Values'
        }

        /// <summary>
        /// Test the property 'Value'
        /// </summary>
        [Fact]
        public void ValueTest()
        {
            // TODO unit test for the property 'Value'
        }

        /// <summary>
        /// Test the property 'Operator'
        /// </summary>
        [Fact]
        public void OperatorTest()
        {
            // TODO unit test for the property 'Operator'
        }
    }
}
